AWSTemplateFormatVersion: "2010-09-09"
Description: EC2 with access to CodeCommit repo

Parameters:
  # ############# GENERAL #############
  ServiceName:
    Description: Name of the service
    Type: String
  # ###################################

  # ############# EC2 #############
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    ConstraintDescription: must be a valid EC2 instance type.
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: "9"
    MaxLength: "18"
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  # ###############################

  # ############# VPC #############
  VPCCidrBlock:
    Description: CIDR Block for VPC
    Type: String
    Default: 10.0.0.0/16
  PublicCidrBlock:
    Description: CIDR Block for Public Subnet
    Type: String
    Default: 10.0.0.0/24
  PrivateCidrBlock:
    Description: CIDR Block for Private Subnet
    Type: String
    Default: 10.0.1.0/24
  PublicAZ:
    Description: Public AZ for the service
    Type: String
    Default: eu-central-1a
  # ###############################

Resources:
  # ################
  # VPC
  # ################
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidrBlock
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub "${ServiceName}-vpc"
        - Key: Scope
          Value: Lab

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    DependsOn: VPC

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    DependsOn:
      - VPC
      - InternetGateway
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: AWS::EC2::Subnet
    DependsOn: AttachGateway
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicCidrBlock
      AvailabilityZone: !Ref PublicAZ
      MapPublicIpOnLaunch: true

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    DependsOn:
      - VPC
      - AttachGateway
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${ServiceName}-table"

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn:
      - PublicRouteTable
      - AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet

  ServiceSecurityGroup:
    DependsOn: AttachGateway
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub "${ServiceName}-sg"
      GroupDescription:
        Enable HTTP access via port 80 locked down to the load balancer
        + SSH access
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: "80"
          ToPort: "80"
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: "22"
          ToPort: "22"
          CidrIp: !Ref SSHLocation
      Tags:
        - Key: Scope
          Value: Lab

  # ################
  # CODE COMMIT
  # ################
  ServiceRepo:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: !Sub "${ServiceName}-repo"
      RepositoryDescription: Service repo
      Tags:
        - Key: Scope
          Value: Lab

  # ################
  # IAM
  # ################
  ServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ServiceName}-ec2"
      Description: Allows EC2 instances to call CodeCommit on your behalf.
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
                - cloudformation.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ACodeCommitAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codecommit:GitPull
                  - codecommit:GitPush
                Resource: !GetAtt ServiceRepo.Arn
      Tags:
        - Key: Scope
          Value: Lab

  ServiceInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: !Sub "${ServiceName}-profile"
      Path: /
      Roles:
        - !Ref ServiceRole

  # ################
  # EC2
  # ################
  ServiceMachine:
    Type: AWS::EC2::Instance
    DependsOn: ServiceSecurityGroup
    Properties:
      ImageId: ami-07df274a488ca9195
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SubnetId: !Ref PublicSubnet
      SecurityGroupIds:
        - !Ref ServiceSecurityGroup
      IamInstanceProfile: !Ref ServiceInstanceProfile
      UserData: !Base64
        Fn::Sub: |
          #!/bin/bash -xe
          yum update -y
          yum install -y git
          git config --system credential.helper '!aws codecommit credential-helper $@'
          git config --system credential.UseHttpPath true
          git clone ${ServiceRepo.CloneUrlHttp}
      Tags:
        - Key: Name
          Value: !Sub "${ServiceName}-machine"
        - Key: Scope
          Value: Lab

Outputs:
  ServiceURL:
    Value: !Sub "http://${ServiceMachine.PublicDnsName}"
  ServiceIPAddress:
    Value: !GetAtt ServiceMachine.PublicIp
